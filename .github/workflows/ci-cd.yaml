name: CI/CD

on:
  push:
    branches:
      - '*'

jobs:
  build_test_image:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Build Test Image
        run: |
          docker build -t ${{ secrets.DOCKER_TEST_IMAGE }} -f ./Dockerfile.staging .
          docker logout
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
          docker push ${{ secrets.DOCKER_TEST_IMAGE }}
          docker system prune -f

  deploy_test:
    runs-on: ubuntu-latest
    needs: build_test_image
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add droplet to SSH known hosts
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}" | ssh-agent bash -
          ssh-add - <<<"${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}"
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Test
        env:
            SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
            SERVER_IP: ${{ secrets.SERVER_IP }}
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "docker pull ${{ secrets.DOCKER_TEST_IMAGE }}"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "docker stop ${{ secrets.DOCKER_TEST_IMAGE }} || true"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "docker rm ${{ secrets.DOCKER_TEST_IMAGE }} || true"
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "docker run -d -p 8080:8080 ${{ secrets.DOCKER_TEST_IMAGE }}"